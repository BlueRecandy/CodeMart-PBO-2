/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package io.bluerecandy.codemart.gui.view;

import io.bluerecandy.codemart.gui.AppCache;
import io.bluerecandy.codemart.gui.controller.AccountController;
import io.bluerecandy.codemart.gui.controller.ProductController;
import io.bluerecandy.codemart.gui.controller.PurchaseController;
import io.bluerecandy.codemart.gui.controller.UserController;
import io.bluerecandy.codemart.gui.model.Account;
import io.bluerecandy.codemart.gui.model.Product;
import io.bluerecandy.codemart.gui.model.User;

import javax.swing.*;
import java.util.List;
import java.util.stream.Collectors;

/**
 *
 * @author Fathan
 */
public class DashboardFrame extends javax.swing.JFrame {

    /**
     * Creates new form ProductBrowseFrame
     */
    public DashboardFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogDashboardFrameAccountTopup = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        textFieldDashboardFrameAccountDialogTopupAmount = new javax.swing.JTextField();
        buttonDashboardFrameAccountDialogTopup = new javax.swing.JButton();
        buttonDashboardFrameAccountDialogTopupCancel = new javax.swing.JButton();
        tabbedPaneDashboardFrame = new javax.swing.JTabbedPane();
        panelDashboardFrameBrowse = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listDashboardFrameBrowseProducts = new javax.swing.JList<>();
        labelDashboardFrameBrowseTitle = new javax.swing.JLabel();
        labelDashboardFrameBrowsePrice = new javax.swing.JLabel();
        buttonDashboardFrameBrowseDownload = new javax.swing.JButton();
        buttonDashboardFrameBrowsePurchase = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        textAreaDashboardFrameBrowseDescription = new javax.swing.JTextArea();
        panelDashboardFrameYourProducts = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listDashboardFrameYourProducts = new javax.swing.JList<>();
        buttonDashboardFrameYourProductsSave = new javax.swing.JButton();
        buttonDashboardFrameYourProductsRemove = new javax.swing.JButton();
        buttonDashboardFrameYourProductsCancel = new javax.swing.JButton();
        labelDashboardFrameYourProductsTitle = new javax.swing.JLabel();
        textFieldDashboardFrameYourProductsTitle = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        textAreaDashboardFrameYourProductsDescription = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        textFieldDashboardFrameYourProductsPrice = new javax.swing.JTextField();
        panelDashboardFrameUploadProduct = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textFieldDashboardFrameUploadProductTitle = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textFieldDashboardFrameUploadProductPrice = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaDashboardFrameUploadProductDescription = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textFieldDashboardFrameUploadProductVersion = new javax.swing.JTextField();
        buttonDashboardFrameUploadProductUpload = new javax.swing.JButton();
        buttonDashboardFrameUploadProductClear = new javax.swing.JButton();
        panelDashboardFrameAccount = new javax.swing.JPanel();
        labelDashboardFrameAccountName = new javax.swing.JLabel();
        labelDashboardFrameAccountCoin = new javax.swing.JLabel();
        buttonDashboardFrameAccountLogout = new javax.swing.JButton();
        buttonDashboardFrameAccountTopup = new javax.swing.JButton();

        dialogDashboardFrameAccountTopup.setTitle("Account Topup");
        dialogDashboardFrameAccountTopup.setAlwaysOnTop(true);
        dialogDashboardFrameAccountTopup.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        dialogDashboardFrameAccountTopup.setSize(new java.awt.Dimension(280, 160));

        jLabel7.setText("Amount");

        buttonDashboardFrameAccountDialogTopup.setText("Topup");
        buttonDashboardFrameAccountDialogTopup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDashboardFrameAccountDialogTopupActionPerformed(evt);
            }
        });

        buttonDashboardFrameAccountDialogTopupCancel.setText("Cancel");
        buttonDashboardFrameAccountDialogTopupCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDashboardFrameAccountDialogTopupCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textFieldDashboardFrameAccountDialogTopupAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(buttonDashboardFrameAccountDialogTopup)
                        .addGap(18, 18, 18)
                        .addComponent(buttonDashboardFrameAccountDialogTopupCancel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textFieldDashboardFrameAccountDialogTopupAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonDashboardFrameAccountDialogTopup)
                    .addComponent(buttonDashboardFrameAccountDialogTopupCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dialogDashboardFrameAccountTopupLayout = new javax.swing.GroupLayout(dialogDashboardFrameAccountTopup.getContentPane());
        dialogDashboardFrameAccountTopup.getContentPane().setLayout(dialogDashboardFrameAccountTopupLayout);
        dialogDashboardFrameAccountTopupLayout.setHorizontalGroup(
            dialogDashboardFrameAccountTopupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogDashboardFrameAccountTopupLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        dialogDashboardFrameAccountTopupLayout.setVerticalGroup(
            dialogDashboardFrameAccountTopupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogDashboardFrameAccountTopupLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        listDashboardFrameBrowseProducts.setModel(new DefaultListModel());
        listDashboardFrameBrowseProducts.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listDashboardFrameBrowseProductsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listDashboardFrameBrowseProducts);

        labelDashboardFrameBrowseTitle.setText("Product Title");

        labelDashboardFrameBrowsePrice.setText("Price:");

        buttonDashboardFrameBrowseDownload.setText("Download");
        buttonDashboardFrameBrowseDownload.setEnabled(false);

        buttonDashboardFrameBrowsePurchase.setText("Purchase");
        buttonDashboardFrameBrowsePurchase.setEnabled(false);
        buttonDashboardFrameBrowsePurchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDashboardFrameBrowsePurchaseActionPerformed(evt);
            }
        });

        textAreaDashboardFrameBrowseDescription.setColumns(20);
        textAreaDashboardFrameBrowseDescription.setLineWrap(true);
        textAreaDashboardFrameBrowseDescription.setRows(5);
        textAreaDashboardFrameBrowseDescription.setEnabled(false);
        jScrollPane4.setViewportView(textAreaDashboardFrameBrowseDescription);

        javax.swing.GroupLayout panelDashboardFrameBrowseLayout = new javax.swing.GroupLayout(panelDashboardFrameBrowse);
        panelDashboardFrameBrowse.setLayout(panelDashboardFrameBrowseLayout);
        panelDashboardFrameBrowseLayout.setHorizontalGroup(
            panelDashboardFrameBrowseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDashboardFrameBrowseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(panelDashboardFrameBrowseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDashboardFrameBrowseTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelDashboardFrameBrowsePrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelDashboardFrameBrowseLayout.createSequentialGroup()
                        .addGroup(panelDashboardFrameBrowseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDashboardFrameBrowseLayout.createSequentialGroup()
                                .addComponent(buttonDashboardFrameBrowseDownload)
                                .addGap(18, 18, 18)
                                .addComponent(buttonDashboardFrameBrowsePurchase))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelDashboardFrameBrowseLayout.setVerticalGroup(
            panelDashboardFrameBrowseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDashboardFrameBrowseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDashboardFrameBrowseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelDashboardFrameBrowseLayout.createSequentialGroup()
                        .addComponent(labelDashboardFrameBrowseTitle)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelDashboardFrameBrowsePrice))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelDashboardFrameBrowseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonDashboardFrameBrowseDownload)
                    .addComponent(buttonDashboardFrameBrowsePurchase))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        tabbedPaneDashboardFrame.addTab("Browse", panelDashboardFrameBrowse);

        listDashboardFrameYourProducts.setModel(new DefaultListModel());
        listDashboardFrameYourProducts.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listDashboardFrameYourProductsValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listDashboardFrameYourProducts);

        buttonDashboardFrameYourProductsSave.setText("Save");
        buttonDashboardFrameYourProductsSave.setEnabled(false);
        buttonDashboardFrameYourProductsSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDashboardFrameYourProductsSaveActionPerformed(evt);
            }
        });

        buttonDashboardFrameYourProductsRemove.setText("Remove");
        buttonDashboardFrameYourProductsRemove.setEnabled(false);
        buttonDashboardFrameYourProductsRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDashboardFrameYourProductsRemoveActionPerformed(evt);
            }
        });

        buttonDashboardFrameYourProductsCancel.setText("Cancel");
        buttonDashboardFrameYourProductsCancel.setEnabled(false);
        buttonDashboardFrameYourProductsCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDashboardFrameYourProductsCancelActionPerformed(evt);
            }
        });

        labelDashboardFrameYourProductsTitle.setText("Title");

        textFieldDashboardFrameYourProductsTitle.setEnabled(false);

        jLabel5.setText("Description");

        textAreaDashboardFrameYourProductsDescription.setColumns(20);
        textAreaDashboardFrameYourProductsDescription.setRows(5);
        textAreaDashboardFrameYourProductsDescription.setWrapStyleWord(true);
        textAreaDashboardFrameYourProductsDescription.setEnabled(false);
        jScrollPane5.setViewportView(textAreaDashboardFrameYourProductsDescription);

        jLabel6.setText("Price");

        textFieldDashboardFrameYourProductsPrice.setEnabled(false);

        javax.swing.GroupLayout panelDashboardFrameYourProductsLayout = new javax.swing.GroupLayout(panelDashboardFrameYourProducts);
        panelDashboardFrameYourProducts.setLayout(panelDashboardFrameYourProductsLayout);
        panelDashboardFrameYourProductsLayout.setHorizontalGroup(
            panelDashboardFrameYourProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDashboardFrameYourProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelDashboardFrameYourProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDashboardFrameYourProductsLayout.createSequentialGroup()
                        .addGroup(panelDashboardFrameYourProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldDashboardFrameYourProductsTitle, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDashboardFrameYourProductsLayout.createSequentialGroup()
                                .addComponent(buttonDashboardFrameYourProductsSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonDashboardFrameYourProductsCancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                                .addComponent(buttonDashboardFrameYourProductsRemove))
                            .addComponent(labelDashboardFrameYourProductsTitle)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane5))
                        .addGap(36, 36, 36))
                    .addGroup(panelDashboardFrameYourProductsLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldDashboardFrameYourProductsPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        panelDashboardFrameYourProductsLayout.setVerticalGroup(
            panelDashboardFrameYourProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDashboardFrameYourProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDashboardFrameYourProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDashboardFrameYourProductsLayout.createSequentialGroup()
                        .addComponent(labelDashboardFrameYourProductsTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldDashboardFrameYourProductsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelDashboardFrameYourProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(textFieldDashboardFrameYourProductsPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addGroup(panelDashboardFrameYourProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonDashboardFrameYourProductsSave)
                            .addComponent(buttonDashboardFrameYourProductsRemove)
                            .addComponent(buttonDashboardFrameYourProductsCancel)))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );

        tabbedPaneDashboardFrame.addTab("Your Products", panelDashboardFrameYourProducts);

        jLabel1.setText("Product Title");

        jLabel2.setText("Price");

        textAreaDashboardFrameUploadProductDescription.setColumns(20);
        textAreaDashboardFrameUploadProductDescription.setRows(5);
        jScrollPane2.setViewportView(textAreaDashboardFrameUploadProductDescription);

        jLabel3.setText("Description");

        jLabel4.setText("Version");

        buttonDashboardFrameUploadProductUpload.setText("Upload Product");
        buttonDashboardFrameUploadProductUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDashboardFrameUploadProductUploadActionPerformed(evt);
            }
        });

        buttonDashboardFrameUploadProductClear.setText("Clear");
        buttonDashboardFrameUploadProductClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDashboardFrameUploadProductClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDashboardFrameUploadProductLayout = new javax.swing.GroupLayout(panelDashboardFrameUploadProduct);
        panelDashboardFrameUploadProduct.setLayout(panelDashboardFrameUploadProductLayout);
        panelDashboardFrameUploadProductLayout.setHorizontalGroup(
            panelDashboardFrameUploadProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDashboardFrameUploadProductLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDashboardFrameUploadProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDashboardFrameUploadProductLayout.createSequentialGroup()
                        .addGroup(panelDashboardFrameUploadProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldDashboardFrameUploadProductTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(panelDashboardFrameUploadProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDashboardFrameUploadProductLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(textFieldDashboardFrameUploadProductPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(panelDashboardFrameUploadProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldDashboardFrameUploadProductVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addComponent(jScrollPane2)
                    .addGroup(panelDashboardFrameUploadProductLayout.createSequentialGroup()
                        .addGroup(panelDashboardFrameUploadProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDashboardFrameUploadProductLayout.createSequentialGroup()
                                .addComponent(buttonDashboardFrameUploadProductUpload)
                                .addGap(18, 18, 18)
                                .addComponent(buttonDashboardFrameUploadProductClear))
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(52, 52, 52))
        );
        panelDashboardFrameUploadProductLayout.setVerticalGroup(
            panelDashboardFrameUploadProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDashboardFrameUploadProductLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panelDashboardFrameUploadProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDashboardFrameUploadProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldDashboardFrameUploadProductTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldDashboardFrameUploadProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldDashboardFrameUploadProductVersion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(panelDashboardFrameUploadProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonDashboardFrameUploadProductUpload)
                    .addComponent(buttonDashboardFrameUploadProductClear))
                .addGap(25, 25, 25))
        );

        tabbedPaneDashboardFrame.addTab("Upload Product", panelDashboardFrameUploadProduct);

        labelDashboardFrameAccountName.setText("Name: ");

        labelDashboardFrameAccountCoin.setText("Coin:");

        buttonDashboardFrameAccountLogout.setText("Logout");
        buttonDashboardFrameAccountLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDashboardFrameAccountLogoutActionPerformed(evt);
            }
        });

        buttonDashboardFrameAccountTopup.setText("Top Up");
        buttonDashboardFrameAccountTopup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDashboardFrameAccountTopupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDashboardFrameAccountLayout = new javax.swing.GroupLayout(panelDashboardFrameAccount);
        panelDashboardFrameAccount.setLayout(panelDashboardFrameAccountLayout);
        panelDashboardFrameAccountLayout.setHorizontalGroup(
            panelDashboardFrameAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDashboardFrameAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDashboardFrameAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDashboardFrameAccountName, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDashboardFrameAccountCoin, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonDashboardFrameAccountTopup))
                .addContainerGap(383, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDashboardFrameAccountLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonDashboardFrameAccountLogout)
                .addGap(33, 33, 33))
        );
        panelDashboardFrameAccountLayout.setVerticalGroup(
            panelDashboardFrameAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDashboardFrameAccountLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(labelDashboardFrameAccountName)
                .addGap(18, 18, 18)
                .addComponent(labelDashboardFrameAccountCoin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonDashboardFrameAccountTopup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                .addComponent(buttonDashboardFrameAccountLogout)
                .addGap(38, 38, 38))
        );

        tabbedPaneDashboardFrame.addTab("Account", panelDashboardFrameAccount);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneDashboardFrame)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneDashboardFrame)
                .addContainerGap())
        );

        tabbedPaneDashboardFrame.getAccessibleContext().setAccessibleName("Browse");
        tabbedPaneDashboardFrame.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        // Product Browse
        List<Product> products = ProductController.getInstance().getAllProducts();
        DefaultListModel<Product> model = (DefaultListModel<Product>) listDashboardFrameBrowseProducts.getModel();
        for(int i = 0;i < products.size(); i++){
            Product hasil = products.get(i);
            model.addElement(hasil);
        }

        // Account
        User activeUser = AppCache.getInstance().getActiveUser();
        updateFrame();

        // Your Products
        model = (DefaultListModel<Product>) listDashboardFrameYourProducts.getModel();
        List<Product> ownedProducts = products.stream()
                .filter(product -> product.getOwner().getId() == activeUser.getId()).collect(Collectors.toList());
        for(int i = 0;i < ownedProducts.size(); i++){
            Product hasil = ownedProducts.get(i);
            model.addElement(hasil);
        }    
    }//GEN-LAST:event_formWindowOpened

    private void buttonDashboardFrameAccountLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDashboardFrameAccountLogoutActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new LoginFrame().setVisible(true);
        
        // Logout
        AccountController.getInstance().logout(AppCache.getInstance().getActiveAccount().getId());
        
        // Clear account cache
        AppCache.getInstance().setActiveAccount(null);
        AppCache.getInstance().setActiveUser(null);
    }//GEN-LAST:event_buttonDashboardFrameAccountLogoutActionPerformed

    private void listDashboardFrameBrowseProductsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listDashboardFrameBrowseProductsValueChanged
        // TODO add your handling code here:
        Product product = listDashboardFrameBrowseProducts.getSelectedValue();
        if (product != null){
            User activeUser = AppCache.getInstance().getActiveUser();

            labelDashboardFrameBrowseTitle.setText(product.getName());
            labelDashboardFrameBrowsePrice.setText("Price: " + product.getPrice());
            textAreaDashboardFrameBrowseDescription.setText(product.getDescription());

            if (product.getOwner().getId() != activeUser.getId()) {
                // TODO Check if user able to download
                PurchaseController purchaseController = PurchaseController.getInstance();

                if (purchaseController.hasPurchased(activeUser.getId(), product.getId())) {
                    buttonDashboardFrameBrowseDownload.setEnabled(true);
                }else {
                    // TODO Check if user able to purchase
                    buttonDashboardFrameBrowsePurchase.setEnabled(true);
                }
            }else{
                buttonDashboardFrameBrowseDownload.setEnabled(false);
                buttonDashboardFrameBrowsePurchase.setEnabled(false);
            }
        }else{
            labelDashboardFrameBrowseTitle.setText("Product Title");
            labelDashboardFrameBrowsePrice.setText("Price:");
            textAreaDashboardFrameBrowseDescription.setText("");
            
            // TODO Reset download and purchase button state to disabled
        }
    }//GEN-LAST:event_listDashboardFrameBrowseProductsValueChanged

    private void buttonDashboardFrameAccountTopupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDashboardFrameAccountTopupActionPerformed
        // TODO add your handling code here:
        dialogDashboardFrameAccountTopup.setVisible(true);
    }//GEN-LAST:event_buttonDashboardFrameAccountTopupActionPerformed

    private void buttonDashboardFrameAccountDialogTopupCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDashboardFrameAccountDialogTopupCancelActionPerformed
        // TODO add your handling code here:
        dialogDashboardFrameAccountTopup.setVisible(false);
    }//GEN-LAST:event_buttonDashboardFrameAccountDialogTopupCancelActionPerformed

    private void buttonDashboardFrameAccountDialogTopupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDashboardFrameAccountDialogTopupActionPerformed
        // TODO add your handling code here:
        String amountRaw = textFieldDashboardFrameAccountDialogTopupAmount.getText();
        try{
            int amount = Integer.parseInt(amountRaw);

            User user = AppCache.getInstance().getActiveUser();
            UserController.getInstance().topUp(user, amount);

            dialogDashboardFrameAccountTopup.dispose();
            labelDashboardFrameAccountCoin.setText("Coin: " + user.getCoin());
        }catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null, "TopUp amount must be integer");
        }
        
    }//GEN-LAST:event_buttonDashboardFrameAccountDialogTopupActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        Account activeAccount = AppCache.getInstance().getActiveAccount();

        if (activeAccount != null){
            AccountController.getInstance().logout(activeAccount.getId());
        }
    }//GEN-LAST:event_formWindowClosing

    private void buttonDashboardFrameUploadProductUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDashboardFrameUploadProductUploadActionPerformed
        // TODO add your handling code here:

        String title = textFieldDashboardFrameUploadProductTitle.getText();
        String version = textFieldDashboardFrameUploadProductVersion.getText();
        String priceRaw = textFieldDashboardFrameUploadProductPrice.getText();
        String description = textAreaDashboardFrameUploadProductDescription.getText();
        int price = -1;
        try{
            price = Integer.parseInt(priceRaw);
        }catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Price amount must be integer");
        }

        User user = AppCache.getInstance().getActiveUser();
        Product result = ProductController.getInstance().uploadProduct(title, version, description, price, user.getId(), null);

        if (result != null){
            DefaultListModel<Product> model = (DefaultListModel<Product>) listDashboardFrameBrowseProducts.getModel();
            model.addElement(result);

            model = (DefaultListModel<Product>) listDashboardFrameYourProducts.getModel();
            model.addElement(result);

            JOptionPane.showMessageDialog(null, "Product has been uploaded");

            // Clear field
            textFieldDashboardFrameUploadProductTitle.setText("");
            textFieldDashboardFrameUploadProductPrice.setText("");
            textFieldDashboardFrameUploadProductVersion.setText("");
            textAreaDashboardFrameUploadProductDescription.setText("");
        }
    }//GEN-LAST:event_buttonDashboardFrameUploadProductUploadActionPerformed

    private void buttonDashboardFrameUploadProductClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDashboardFrameUploadProductClearActionPerformed
        // TODO add your handling code here:
        textFieldDashboardFrameUploadProductTitle.setText("");
        textFieldDashboardFrameUploadProductPrice.setText("");
        textFieldDashboardFrameUploadProductVersion.setText("");
        textAreaDashboardFrameUploadProductDescription.setText("");
    }//GEN-LAST:event_buttonDashboardFrameUploadProductClearActionPerformed

    private void buttonDashboardFrameBrowsePurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDashboardFrameBrowsePurchaseActionPerformed
        // TODO add your handling code here:
        User activeUser = AppCache.getInstance().getActiveUser();
        Product product = listDashboardFrameBrowseProducts.getSelectedValue();

        int coin = activeUser.getCoin();
        int price = product.getPrice();

        if (coin >= price){
            if (UserController.getInstance().purchaseProduct(activeUser, product) != null){
                JOptionPane.showMessageDialog(null, "Successfully purchase product");

                buttonDashboardFrameBrowsePurchase.setEnabled(false);
                buttonDashboardFrameBrowseDownload.setEnabled(true);
                updateFrame();
            }
        }
    }//GEN-LAST:event_buttonDashboardFrameBrowsePurchaseActionPerformed

    private void listDashboardFrameYourProductsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listDashboardFrameYourProductsValueChanged
        // TODO add your handling code here:
        Product product = listDashboardFrameYourProducts.getSelectedValue();
        if (product != null){
            textFieldDashboardFrameYourProductsTitle.setText(product.getName());
            textAreaDashboardFrameYourProductsDescription.setText(product.getDescription());
            textFieldDashboardFrameYourProductsPrice.setText(String.valueOf(product.getPrice()));
            
            textFieldDashboardFrameYourProductsTitle.setEnabled(true);
            textAreaDashboardFrameYourProductsDescription.setEnabled(true);
            textFieldDashboardFrameYourProductsPrice.setEnabled(true);
            
            buttonDashboardFrameYourProductsSave.setEnabled(true);
            buttonDashboardFrameYourProductsCancel.setEnabled(true);
            buttonDashboardFrameYourProductsRemove.setEnabled(true);
        }
    }//GEN-LAST:event_listDashboardFrameYourProductsValueChanged
  
    private void buttonDashboardFrameYourProductsSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDashboardFrameYourProductsSaveActionPerformed
        // TODO add your handling code here:
        Product product = listDashboardFrameYourProducts.getSelectedValue();
        int id = product.getId();
        String name = textFieldDashboardFrameYourProductsTitle.getText();
        String desc = textAreaDashboardFrameYourProductsDescription.getText();
        int price = Integer.parseInt(textFieldDashboardFrameYourProductsPrice.getText());
        
        try{
            boolean update = ProductController.getInstance().updateProducts(id, name, desc, price);
             if (update){
                JOptionPane.showMessageDialog(null, "Update Success");            
                product.setName(name);
                product.setDescription(desc);
                product.setPrice(price);
            }          
        } catch(Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_buttonDashboardFrameYourProductsSaveActionPerformed

    private void buttonDashboardFrameYourProductsCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDashboardFrameYourProductsCancelActionPerformed
        // TODO add your handling code here:
        //cancel(textFieldDashboardFrameYourProductsTitle);
        //textAreaDashboardFrameYourProductsDescription.getText();
        //textFieldDashboardFrameYourProductsPrice.
        //this.setVisible(false);
    }//GEN-LAST:event_buttonDashboardFrameYourProductsCancelActionPerformed

    private void buttonDashboardFrameYourProductsRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDashboardFrameYourProductsRemoveActionPerformed
        // TODO add your handling code here:
        DefaultListModel<Product> model = (DefaultListModel<Product>) listDashboardFrameYourProducts.getModel();
        Product products = listDashboardFrameYourProducts.getSelectedValue();
        int id = products.getId();
        String name = textFieldDashboardFrameYourProductsTitle.getText();

        try{
            JOptionPane.showMessageDialog(null, "Are you sure to delete this product?"); 
            boolean delete = ProductController.getInstance().deleteProducts(id, name);
             if (delete){
                JOptionPane.showMessageDialog(null, "Delete Success");            
                model.removeElementAt(listDashboardFrameYourProducts.getSelectedIndex());  
                textFieldDashboardFrameYourProductsTitle.setText("");
                textAreaDashboardFrameYourProductsDescription.setText("");
                textFieldDashboardFrameYourProductsPrice.setText("");
            }          
        } catch(Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_buttonDashboardFrameYourProductsRemoveActionPerformed

    private void updateFrame(){
        User activeUser = AppCache.getInstance().getActiveUser();
        if (activeUser != null) {
            labelDashboardFrameAccountName.setText("Name: " + activeUser.getName());
            labelDashboardFrameAccountCoin.setText("Coin: " + activeUser.getCoin());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashboardFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonDashboardFrameAccountDialogTopup;
    private javax.swing.JButton buttonDashboardFrameAccountDialogTopupCancel;
    private javax.swing.JButton buttonDashboardFrameAccountLogout;
    private javax.swing.JButton buttonDashboardFrameAccountTopup;
    private javax.swing.JButton buttonDashboardFrameBrowseDownload;
    private javax.swing.JButton buttonDashboardFrameBrowsePurchase;
    private javax.swing.JButton buttonDashboardFrameUploadProductClear;
    private javax.swing.JButton buttonDashboardFrameUploadProductUpload;
    private javax.swing.JButton buttonDashboardFrameYourProductsCancel;
    private javax.swing.JButton buttonDashboardFrameYourProductsRemove;
    private javax.swing.JButton buttonDashboardFrameYourProductsSave;
    private javax.swing.JDialog dialogDashboardFrameAccountTopup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel labelDashboardFrameAccountCoin;
    private javax.swing.JLabel labelDashboardFrameAccountName;
    private javax.swing.JLabel labelDashboardFrameBrowsePrice;
    private javax.swing.JLabel labelDashboardFrameBrowseTitle;
    private javax.swing.JLabel labelDashboardFrameYourProductsTitle;
    private javax.swing.JList<Product> listDashboardFrameBrowseProducts;
    private javax.swing.JList<Product> listDashboardFrameYourProducts;
    private javax.swing.JPanel panelDashboardFrameAccount;
    private javax.swing.JPanel panelDashboardFrameBrowse;
    private javax.swing.JPanel panelDashboardFrameUploadProduct;
    private javax.swing.JPanel panelDashboardFrameYourProducts;
    private javax.swing.JTabbedPane tabbedPaneDashboardFrame;
    private javax.swing.JTextArea textAreaDashboardFrameBrowseDescription;
    private javax.swing.JTextArea textAreaDashboardFrameUploadProductDescription;
    private javax.swing.JTextArea textAreaDashboardFrameYourProductsDescription;
    private javax.swing.JTextField textFieldDashboardFrameAccountDialogTopupAmount;
    private javax.swing.JTextField textFieldDashboardFrameUploadProductPrice;
    private javax.swing.JTextField textFieldDashboardFrameUploadProductTitle;
    private javax.swing.JTextField textFieldDashboardFrameUploadProductVersion;
    private javax.swing.JTextField textFieldDashboardFrameYourProductsPrice;
    private javax.swing.JTextField textFieldDashboardFrameYourProductsTitle;
    // End of variables declaration//GEN-END:variables
}
